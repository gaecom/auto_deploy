upstream b888 {
	server 127.0.0.1:8888;
	}
	upstream b443 {
	server 127.0.0.1:8443;
	}
	upstream b889 {
	server 127.0.0.1:8889;
	}

	server
	{
	listen 443;
	server_name w.cc api.w.cc;

	large_client_header_buffers 8 32k;

	ssl on;
	ssl_certificate /home/wwwroot/site.cert;
	ssl_session_timeout 5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers   on;
	ssl_certificate_key /home/wwwroot/site.key;
	root  /home/wwwroot/wrtc_start/public;
	index index.php index.html index.htm;




	set $flag 0;

	if ($request_uri !~* "/socket.io/")
	{
	    set $flag "${flag}1";

	}
	if ($request_uri !~* "/channel/")
	{
	set $flag "${flag}2";

	}
	if ($request_uri !~* "/ws/buffalo")
	{
	set $flag "${flag}3";

	}
	location /ws/buffalo {
	access_log off;
	proxy_pass https://b889;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# WebSocket support (nginx 1.4)
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";

	# Path rewriting
	rewrite /ws/buffalo/(.*) /$1 break;
	proxy_redirect off;
	}
	location /socket.io/
	{
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header Host $http_host;
	proxy_set_header X-NginX-Proxy true;

	# prevents 502 bad gateway error
	proxy_buffers 8 32k;
	proxy_buffer_size 64k;

	proxy_pass https://b443;
	proxy_redirect off;

	# enables WS support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";

	break;

	}
	location  /channel/
	{
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header Host $http_host;
	proxy_set_header X-NginX-Proxy true;

	# prevents 502 bad gateway error
	proxy_buffers 8 32k;
	proxy_buffer_size 64k;

	proxy_pass https://b443;
	proxy_redirect off;

	# enables WS support
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
	rewrite /channel/(.*) /$1;

	break;

	}
	if (!-e $request_filename) {
	        set $flag "${flag}4";
	}
	
		if ($request_uri !~* ".*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$")
	        {
	             set $flag "${flag}5";

	        }

                if ($flag = '012345') {

                	rewrite ^/(.*)  /index.php/$1 last;
                }				


location ~ ^.+\.php 			{
				root        /home/wwwroot/wrtc_start/public;
				fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;
				fastcgi_pass  unix:/tmp/php-cgi.sock;

				fastcgi_param PATH_INFO $fastcgi_path_info;
				fastcgi_param  SCRIPT_FILENAME /home/wwwroot/wrtc_start/public$fastcgi_script_name;
				 fastcgi_param PATH_TRANSLATED /home/wwwroot/wrtc_start/public$fastcgi_path_info;
				include fastcgi.conf;
			}
	
	location ~ .*\.(js|css)?$
	{
	expires      12h;
	}

		location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
			{
				expires      30d;
			}


	}
server
	{
		
    	# 若ssl_certificate_key使用33iq.key，则每次启动Nginx服务器都要求输入key的密码。
		listen       80;
		server_name  w.cc  api.w.cc;
		large_client_header_buffers 8 32k;
		add_header Server SNOWSERVER;#Append SnowServer to the Server header
		#set and clear header
		index index.php index.html index.htm ;
		root  /home/wwwroot/wrtc_start/public;
			location /wrtcchannel {
			
			proxy_pass http://b888;
			break;
      
		}
		##reverse proxy google viewer
		location ^~ /viewer {
			#footer "<script src='/js/docs/rmcp.js'></script>";
			sub_filter gview/resources_gview/client/js /gview/resources_gview/client/js;
  		
  			#sub_filter_once on;
		    proxy_set_header   Host            docs.google.com;
		    proxy_connect_timeout 600;
		    proxy_read_timeout    600;
		    proxy_send_timeout    600; 
		    proxy_buffer_size     32k;
		    proxy_buffers         4 32k;
		    proxy_busy_buffers_size  64k;
		    proxy_temp_file_write_size  64k;
		    proxy_set_header   X-Real-IP        $remote_addr;
		    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
			#proxy_set_header  Host  index.baidu.com;
			proxy_pass        https://docs.google.com/viewer;
		} 
		location ^~ /gview { 
  			
  			#sub_filter_once on;
		    proxy_set_header   Host            docs.google.com;
		    proxy_connect_timeout 600;
		    proxy_read_timeout    600;
		    proxy_send_timeout    600; 
		    proxy_buffer_size     32k;
		    proxy_buffers         4 32k;
		    proxy_busy_buffers_size  64k;
		    proxy_temp_file_write_size  64k;
		    proxy_set_header   X-Real-IP        $remote_addr;
		    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
			#proxy_set_header  Host  index.baidu.com;
			proxy_pass        https://docs.google.com/gview;
		} 
location  /socket.io/
		{
			   proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-NginX-Proxy true;
	 
			# prevents 502 bad gateway error
			proxy_buffers 8 32k;
			proxy_buffer_size 64k;
	 
			proxy_pass http://b888;
			proxy_redirect off;
	 	
			# enables WS support
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";

			break;
		
			
		}
		### if request_uri is not socket.io.

		### avoid matching rewrite rule
	 			set $flag 0;
                if ($request_uri !~* "/socket.io/")
                {
                                set $flag "${flag}1";

                }
              	  if ($request_uri !~* "/viewer")
                {
                                set $flag "${flag}2";

                }
               if ($request_uri !~* "/gview")
                {
                                set $flag "${flag}3";

                }
                if (!-e $request_filename) {
                        set $flag "${flag}4";
                }
           
				if ($request_uri !~* ".*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$")
                {
                     set $flag "${flag}5";

                }

                if ($flag = '012345') {

                	rewrite ^/(.*)  /index.php/$1 last;
                }
               


	

		location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
			{
				expires      30d;
			}
location ~ ^.+\.php 			{
				root        /home/wwwroot/wrtc_start/public;
				fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;
				fastcgi_pass  unix:/tmp/php-cgi.sock;

				fastcgi_param PATH_INFO $fastcgi_path_info;
				fastcgi_param  SCRIPT_FILENAME /home/wwwroot/wrtc_start/public$fastcgi_script_name;
				 fastcgi_param PATH_TRANSLATED /home/wwwroot/wrtc_start/public$fastcgi_path_info;
				include fastcgi.conf;
			}
	
		location ~ .*\.(js|css)?$
			{
				expires      12h;
			}

		log_format  access_w_cc  '$remote_addr - $remote_user [$time_local] "$request" '
             '$status $body_bytes_sent "$http_referer" '
             '"$http_user_agent" $http_x_forwarded_for';
	       access_log /home/wwwlogs/access_w_cc.log  access_w_cc;
	}

		
