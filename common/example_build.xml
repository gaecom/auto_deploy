<project name="teststrutsspring" basedir="." default="dist">  
    <property file="build.properties" />  
    <property file="version.properties" />  
    <property name="src" location="src" />  
    <property name="build" location="build" />  
    <property name="dist" location="dist" />  
    <property name="lib.dir" location="WebRoot/WEB-INF/lib" />  
    <property name="web" location="WebRoot" />  
    <property name="classpath" value=".;./xml-apis.jar;../lib/xbean.jar;./easypo.jar"/>

    <target name="dist" description="Generate the distribution">  
        <antcall target="clean" />  
        <antcall target="init" />  
        <antcall target="getVersion" />  
        <antcall target="compile" />  
        <antcall target="copyother" />  
        <antcall target="jar" />  
        <antcall target="jarclientapi" />  
        <antcall target="war" />  
    </target>  
  
    <target name="dist-Product" description="Generate the Product">  
        <antcall target="clean" />  
        <antcall target="init" />  
        <antcall target="getVersion" />  
        <antcall target="compile" />  
        <antcall target="copyother" />  
        <antcall target="copy-product-env-config" />  
        <antcall target="jar" />  
        <antcall target="war" />  
        <echo>Generate the product environment!</echo>  
        <target name="deploy" depends="compile,doc" >
            <!-- ftp -->
    <jar destfile="dist/project.jar" basedir="build/classes"/> 
         <ftp server="" userid="" password="">
     <fileset dir="dist"/>

</ftp>

<delete>
    <!--所有使用PatternSets, FileSets 或 path-like structures嵌套元素的task也接受这种类型的引用-->
    <path id="project.class.path">
<pathelement location="lib/"/>
<pathelement path="{java.class.path}/"/>
<pathelement path="{additional.path}"/>
</path>
   <!--所有使用PatternSets, FileSets 或 path-like structures嵌套元素的task也接受这种类型的引用-->
<classpath refid="project.class.path"/>
<fileset dir="." includes="**/*.bak"/>
</delete>
<!--4.删除指定目录及其子目录，包括他自己-->
<delete includeEmptyDirs="true">
<fileset dir="build"/>
</delete>
<!--5.拷贝一批文件到指定目录下，将文件名后增加。Bak后缀-->
<copy todir="../backup/dir">
<fileset dir="src_dir"/>
<mapper type="glob" from="*" to="*.bak"/>
</copy>
<!--6.拷贝一组文件到指定目录下，替换其中的@标签@内容-->
<copy todir="../backup/dir">
<fileset dir="src_dir"/>
<filterset>
<filter token="TITLE" value="Foo Bar"/>
</filterset>
</copy>
<!-- move file and folder -->
<move todir="my/src/dir">
<fileset dir="my/src/dir">
<exclude name="**/*.bak"/>
</fileset>
<mapper type="glob" from="*" to="*.bak"/>
</move>
<!--compile --> 
<javac srcdir="{src}"
destdir="{src}"
classpath="{classpath}"
debug="on"
/>
<javac srcdir="{src}:{src2}"
destdir="{build}"
includes="mypackage/p1/**,mypackage/p2/**"
excludes="mypackage/p1/testpackage/**"
classpath="xyz.jar"
debug="on"
/>
<!--package jar -->
<jar destfile="{dist}/lib/app.jar"
basedir="{build}/classes"
includes="mypackage/test/**"
excludes="**/Test.class"
manifest="my.mf"
/>
<!--package war -->
<war destfile="myapp.war" webxml="src/metadata/myapp.xml">
<fileset dir="src/html/myapp"/>
<fileset dir="src/jsp/myapp"/>
<lib dir="thirdparty/libs">
<exclude name="jdbc1.jar"/>
</lib>
<classes dir="build/main"/>
<zipfileset dir="src/graphics/images/gifs"
prefix="images"/>
</war>
<!-- send email -->
          <mail mailhost="smtp.163.com" mailport="25" subject="Test build">
<from address="chjade@163.com"/>
<to address="deguo2@yeah.net"/>
<message>The hello nightly build has completed</message>
<fileset dir="${commonLocation}">
<include name="common.sh"/>
</fileset>
</mail>
<sql
driver="org.gjt.mm.mysql.Driver"
url="jdbc:mysql://localhost:3306/mydb"
userid="root"
password="root"
src="data.sql"
/>
<sql
driver="org.database.jdbcDriver"
url="jdbc:database-url"
userid="sa"
password="pass"
src="data.sql"
rdbms="oracle"
version="8.1.">
    </target>  
    <target name="run" description="Run the program">
     <java classname="${main}" classpath="${classpath}"/>
</target>
<exec executable="${LIB_PATH}/preverify.exe">
    <arg line="-classpath ${compile.classpath} -d temp/build temp/obfuscate"/>
</exec>
  <java fork="true" classname="proguard.ProGuard" classpath="${proguard.classpath}">
             <arg line="-libraryjars ${proguard.classpath}"/>
             <arg line="-injars temp/${app.project}_tmp.jar"/>
             <arg line="-outjar temp/${app.project}_obf.jar"/>
             <arg line="-defaultpackage ''"/>
             <arg line="-dontusemixedcaseclassnames"/>
             <arg line="-keep public class ${app.midlet}"/>
</java>
    <target name="init">  
        <!-- Create the time stamp -->  
        <tstamp />  
        <!-- Create the build directory structure used by compile -->  
        <mkdir dir="${build}" />  
        <mkdir dir="${dist}" />  
    </target>  
  
    <target name="clean" description="clean up">  
        <!-- Delete the ${build} and ${dist} directory trees -->  
        <delete dir="${build}" />  
        <delete dir="${dist}" />  
    </target>  
  
    <target name="getVersion">  
        <propertyfile file="version.properties" comment="This is Version File">  
            <entry key="buildDate" type="date" value="now" pattern="yyyy-MM-dd HH:mm:ss" />  
        </propertyfile>  
        <property file="version.properties" />  
        <copy todir="${build}">  
            <fileset dir=".">  
                <include name="version.properties" />  
            </fileset>  
        </copy>  

    </target>  
  
    <path id="all-libs">  
        <fileset dir="${lib.dir}">  
            <include name="**/*.jar" />  
        </fileset>  
    </path>  
  
    <target name="compile" description="compile the source">  
        <!-- Compile the java code from ${src} into ${build} -->  
        <javac srcdir="${src}" destdir="${build}" encoding="UTF-8" nowarn="true" source="1.5">  
            <classpath refid="all-libs" />  
        </javac>  
    </target>  
  
    <target name="copyother">  
        <copy todir="${build}">  
            <fileset dir="${src}">  
                <include name="**/**" />  
                <exclude name="**/*.java" />  
                <exclude name="*.properties" />  
                <exclude name="*.xml" />  
            </fileset>  
        </copy>  
        <copy todir="${dist}/${webname}">  
            <fileset dir="${web}">  
                <include name="**/*" />  
                <exclude name="**/WEB-INF/classes/**" />  
            </fileset>  
        </copy>  
        <copy todir="${dist}/${webname}/WEB-INF/classes">  
            <fileset dir="${src}">  
                <include name="*.properties" />  
                <include name="*.xml" />  
            </fileset>  
        </copy>  
    </target>  
  
    <target name="jar" description="Generate the distribution">  
        <jar jarfile="${dist}/${projectname}-${version}.jar" basedir="${build}" compress="true">  
        </jar>  
        <copy todir="${dist}/${webname}/WEB-INF/lib">  
            <fileset dir="${dist}">  
                <include name="${projectname}-${version}.jar" />  
            </fileset>  
        </copy>  
    </target>  
  
    <target name="jarclientapi" description="Generate the jar client api">  
        <jar jarfile="${dist}/${clientapiname}-${version}.jar" compress="true">  
            <fileset dir="${build}">  
                <include name="**/*.class" />  
            </fileset>  
        </jar>  
    </target>  
      
    <target name="copy-product-env-config">  
            <copy todir="${dist}/${webname}/WEB-INF/classes" overwrite="true">  
                <fileset dir="ProductEnv-Config">  
                    <include name="*.properties" />  
                </fileset>  
            </copy>  
        </target>  
  
    <target name="war">  
        <war basedir="${dist}/${webname}" warfile="${dist}/${webname}.war" webxml="${dist}/${webname}/WEB-INF/web.xml" compress="false">  
        </war>  
    </target>  
</project>  